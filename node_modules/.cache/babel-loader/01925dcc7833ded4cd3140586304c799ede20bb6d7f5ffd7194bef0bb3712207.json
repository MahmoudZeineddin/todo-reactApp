{"ast":null,"code":"var _jsxFileName = \"/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoWarpper.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../App.css\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\n// save data in local storage..\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoWarpper = () => {\n  _s();\n  const [idCounter, setIdCounter] = React.useState(0); // id method\n  const [todos, setTodos] = React.useState([]); // state hook to save info of task\n  const addTodo = todo => {\n    setTodos([...todos, {\n      id: idCounter,\n      task: todo === \"\" ? \"unTiltled\" : todo,\n      completed: false,\n      isEditing: false\n    }]);\n    setIdCounter(idCounter + 1);\n  };\n\n  // const getTodo = (task) => {\n  //   console.log(todos[0].id);\n  // };\n  // console.log(todos[0].id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), todos.map((todo, index) => {\n      /*#__PURE__*/_jsxDEV(ToDo, {\n        text: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoWarpper, \"XIMFVY1wTLLpYBXHeHW+FepzKmA=\");\n_c = ToDoWarpper;\nexport default ToDoWarpper;\nvar _c;\n$RefreshReg$(_c, \"ToDoWarpper\");","map":{"version":3,"names":["React","ToDoForm","ToDo","jsxDEV","_jsxDEV","ToDoWarpper","_s","idCounter","setIdCounter","useState","todos","setTodos","addTodo","todo","id","task","completed","isEditing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","text","_c","$RefreshReg$"],"sources":["/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoWarpper.js"],"sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\n// save data in local storage..\nconst ToDoWarpper = () => {\n  const [idCounter, setIdCounter] = React.useState(0); // id method\n  const [todos, setTodos] = React.useState([]); // state hook to save info of task\n  const addTodo = (todo) => {\n    setTodos([\n      ...todos,\n      {\n        id: idCounter,\n        task: todo === \"\" ? \"unTiltled\" : todo,\n        completed: false,\n        isEditing: false,\n      },\n    ]);\n    setIdCounter(idCounter + 1);\n  };\n\n  // const getTodo = (task) => {\n  //   console.log(todos[0].id);\n  // };\n  // console.log(todos[0].id);\n  return (\n    <div className=\"TodoWrapper\">\n      <ToDoForm addTodo={addTodo} />\n      {todos.map((todo, index) => {\n        <ToDo text={todo} />;\n      })}\n    </div>\n  );\n};\n\nexport default ToDoWarpper;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAMG,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,CAAC,CACP,GAAGD,KAAK,EACR;MACEI,EAAE,EAAEP,SAAS;MACbQ,IAAI,EAAEF,IAAI,KAAK,EAAE,GAAG,WAAW,GAAGA,IAAI;MACtCG,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE;IACb,CAAC,CACF,CAAC;IACFT,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;EAC7B,CAAC;;EAED;EACA;EACA;EACA;EACA,oBACEH,OAAA;IAAKc,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1Bf,OAAA,CAACH,QAAQ;MAACW,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7Bb,KAAK,CAACc,GAAG,CAAC,CAACX,IAAI,EAAEY,KAAK,KAAK;MAC1B,aAAArB,OAAA,CAACF,IAAI;QAACwB,IAAI,EAAEb;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACtB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5BID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}