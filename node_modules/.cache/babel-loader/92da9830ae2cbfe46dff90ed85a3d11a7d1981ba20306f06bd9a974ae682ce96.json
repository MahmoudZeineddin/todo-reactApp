{"ast":null,"code":"var _jsxFileName = \"/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoForm.js\",\n  _s = $RefreshSig$();\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState, ReactDOMServer } from \"react\";\nimport swal from \"sweetalert\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoForm = ({\n  addTodo,\n  deletedTodo\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault(); // prevent the page onload when form submit\n    addTodo(value, date);\n    setValue(\"\");\n    setDate(\"\");\n  };\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(currentDate.getDate()).padStart(2, \"0\");\n\n  // Create the date string in the format \"YYYY-MM-DD\"\n  const formattedDate = `${year}-${month}-${day}`;\n  const showDeleted = () => {\n    console.log(deletedTodo);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Done Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), deletedTodo.map((todo, index) => /*#__PURE__*/_jsxDEV(ToDo, {\n        task: todo,\n        completed: true,\n        reToDo: reTodo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"todo-input\",\n      placeholder: \"enter your task..\",\n      value: value //to make the input is empty\n      ,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: date,\n      type: \"date\",\n      min: formattedDate,\n      className: \"todo-input\",\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faTrash,\n      className: \"trash\",\n      onClick: showDeleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoForm, \"QFWCJVgKq3ZLveaq8ZTSbHu4Uro=\");\n_c = ToDoForm;\nexport default ToDoForm;\n\n/* e represents the event object. e.target refers \n      to the DOM element (the input field in this case) */\nvar _c;\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["faTrash","FontAwesomeIcon","React","useState","ReactDOMServer","swal","Swal","jsxDEV","_jsxDEV","ToDoForm","addTodo","deletedTodo","_s","value","setValue","date","setDate","handleSubmit","e","preventDefault","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","showDeleted","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","index","ToDo","task","completed","reToDo","reTodo","onSubmit","type","placeholder","onChange","target","min","icon","onClick","_c","$RefreshReg$"],"sources":["/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoForm.js"],"sourcesContent":["import { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState, ReactDOMServer } from \"react\";\nimport swal from \"sweetalert\";\nimport Swal from \"sweetalert2\";\n\nconst ToDoForm = ({ addTodo, deletedTodo }) => {\n  const [value, setValue] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault(); // prevent the page onload when form submit\n    addTodo(value, date);\n    setValue(\"\");\n    setDate(\"\");\n  };\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(currentDate.getDate()).padStart(2, \"0\");\n\n  // Create the date string in the format \"YYYY-MM-DD\"\n  const formattedDate = `${year}-${month}-${day}`;\n\n  const showDeleted = () => {\n    console.log(deletedTodo);\n    return (\n      <div className=\"TodoWrapper\">\n        <h1> Done Tasks</h1>\n        {deletedTodo.map((todo, index) => (\n          <ToDo key={index} task={todo} completed={true} reToDo={reTodo} />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"todo-input\"\n        placeholder=\"enter your task..\"\n        value={value} //to make the input is empty\n        onChange={(e) => setValue(e.target.value)}\n      />\n\n      <input\n        value={date}\n        type=\"date\"\n        min={formattedDate}\n        className=\"todo-input\"\n        onChange={(e) => setDate(e.target.value)}\n      />\n\n      <FontAwesomeIcon icon={faTrash} className=\"trash\" onClick={showDeleted} />\n\n      <button type=\"submit\" className=\"todo-btn\">\n        Add Task\n      </button>\n    </form>\n  );\n};\n\nexport default ToDoForm;\n\n/* e represents the event object. e.target refers \n      to the DOM element (the input field in this case) */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}