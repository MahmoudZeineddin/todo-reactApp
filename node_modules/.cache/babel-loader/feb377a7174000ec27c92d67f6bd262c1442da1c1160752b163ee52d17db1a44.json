{"ast":null,"code":"var _jsxFileName = \"/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoWarpper.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../App.css\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\n// save data in local storage..\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoWarpper = () => {\n  _s();\n  const [idCounter, setIdCounter] = React.useState(0); // id method\n  const [todos, setTodos] = React.useState([]); // state hook to save info of task\n\n  const addTodo = (text, date) => {\n    setTodos([...todos, {\n      id: idCounter,\n      task: text === \"\" ? \"un Titled\" : text,\n      dueDate: date === \"\" ? Date.now : date,\n      completed: false,\n      isEditing: false\n    }]);\n    setIdCounter(idCounter + 1);\n  };\n  console.log(new Date());\n\n  //add delted task in array\n  const [deletedTask, setdeletedTask] = React.useState([]);\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n\n    // const deleteFitter = todos.filter((todo) => todo.id === id);\n    // setdeletedTask([...deletedTask, deleteFitter]);\n  };\n\n  // console.log(deletedTask);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(ToDo, {\n      task: todo,\n      deleteTodo: deleteTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoWarpper, \"Jz/rMh8efa4rYs52YhNFJmxk+2g=\");\n_c = ToDoWarpper;\nexport default ToDoWarpper;\nvar _c;\n$RefreshReg$(_c, \"ToDoWarpper\");","map":{"version":3,"names":["React","ToDoForm","ToDo","jsxDEV","_jsxDEV","ToDoWarpper","_s","idCounter","setIdCounter","useState","todos","setTodos","addTodo","text","date","id","task","dueDate","Date","now","completed","isEditing","console","log","deletedTask","setdeletedTask","deleteTodo","filter","todo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoWarpper.js"],"sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\n// save data in local storage..\nconst ToDoWarpper = () => {\n  const [idCounter, setIdCounter] = React.useState(0); // id method\n  const [todos, setTodos] = React.useState([]); // state hook to save info of task\n\n  const addTodo = (text, date) => {\n    setTodos([\n      ...todos,\n      {\n        id: idCounter,\n        task: text === \"\" ? \"un Titled\" : text,\n        dueDate: date === \"\" ? Date.now : date,\n        completed: false,\n        isEditing: false,\n      },\n    ]);\n    setIdCounter(idCounter + 1);\n  };\n  console.log(new Date());\n\n  //add delted task in array\n  const [deletedTask, setdeletedTask] = React.useState([]);\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n\n    // const deleteFitter = todos.filter((todo) => todo.id === id);\n    // setdeletedTask([...deletedTask, deleteFitter]);\n  };\n\n  // console.log(deletedTask);\n\n  return (\n    <div className=\"TodoWrapper\">\n      <h1>To Do List</h1>\n      <ToDoForm addTodo={addTodo} />\n      {todos.map((todo, index) => (\n        <ToDo key={index} task={todo} deleteTodo={deleteTodo} />\n      ))}\n    </div>\n  );\n};\n\nexport default ToDoWarpper;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMG,OAAO,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;IAC9BH,QAAQ,CAAC,CACP,GAAGD,KAAK,EACR;MACEK,EAAE,EAAER,SAAS;MACbS,IAAI,EAAEH,IAAI,KAAK,EAAE,GAAG,WAAW,GAAGA,IAAI;MACtCI,OAAO,EAAEH,IAAI,KAAK,EAAE,GAAGI,IAAI,CAACC,GAAG,GAAGL,IAAI;MACtCM,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE;IACb,CAAC,CACF,CAAC;IACFb,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;EAC7B,CAAC;EACDe,OAAO,CAACC,GAAG,CAAC,IAAIL,IAAI,CAAC,CAAC,CAAC;;EAEvB;EACA,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGzB,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMiB,UAAU,GAAIX,EAAE,IAAK;IACzBJ,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKA,EAAE,CAAC,CAAC;;IAEhD;IACA;EACF,CAAC;;EAED;;EAEA,oBACEX,OAAA;IAAKyB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B1B,OAAA;MAAA0B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB9B,OAAA,CAACH,QAAQ;MAACW,OAAO,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7BxB,KAAK,CAACyB,GAAG,CAAC,CAACP,IAAI,EAAEQ,KAAK,kBACrBhC,OAAA,CAACF,IAAI;MAAac,IAAI,EAAEY,IAAK;MAACF,UAAU,EAAEA;IAAW,GAA1CU,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuC,CACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxCID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}