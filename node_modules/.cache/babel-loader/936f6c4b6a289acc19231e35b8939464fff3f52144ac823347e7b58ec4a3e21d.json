{"ast":null,"code":"var _jsxFileName = \"/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoWarpper.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../App.css\";\nimport ToDoForm from \"./ToDoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoWarpper = () => {\n  _s();\n  const [idCounter, setIdCounter] = React.useState(0); // id method\n  const [todos, setTodos] = React.useState([]); // state hook to save info of task\n\n  console.log(todos);\n  console.log(typeof todos);\n  const addTodo = todo => {\n    if (todos === \"\") {\n      setTodos([{\n        id: idCounter,\n        task: todo === \"\" ? \"unTiltled\" : todo,\n        completed: false,\n        isEditing: false\n      }]);\n    } else {\n      setTodos([...todos, {\n        id: idCounter,\n        task: todo === \"\" ? \"unTiltled\" : todo,\n        completed: false,\n        isEditing: false\n      }]);\n    }\n    setIdCounter(idCounter + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoWarpper, \"XIMFVY1wTLLpYBXHeHW+FepzKmA=\");\n_c = ToDoWarpper;\nexport default ToDoWarpper;\nvar _c;\n$RefreshReg$(_c, \"ToDoWarpper\");","map":{"version":3,"names":["React","ToDoForm","jsxDEV","_jsxDEV","ToDoWarpper","_s","idCounter","setIdCounter","useState","todos","setTodos","console","log","addTodo","todo","id","task","completed","isEditing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoWarpper.js"],"sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport ToDoForm from \"./ToDoForm\";\n\nconst ToDoWarpper = () => {\n  const [idCounter, setIdCounter] = React.useState(0); // id method\n  const [todos, setTodos] = React.useState([]); // state hook to save info of task\n\n  console.log(todos);\n  console.log(typeof todos);\n  const addTodo = (todo) => {\n    if (todos === \"\") {\n      setTodos([\n        {\n          id: idCounter,\n          task: todo === \"\" ? \"unTiltled\" : todo,\n          completed: false,\n          isEditing: false,\n        },\n      ]);\n    } else {\n      setTodos([\n        ...todos,\n        {\n          id: idCounter,\n          task: todo === \"\" ? \"unTiltled\" : todo,\n          completed: false,\n          isEditing: false,\n        },\n      ]);\n    }\n\n    setIdCounter(idCounter + 1);\n  };\n\n  return (\n    <div className=\"TodoWrapper\">\n      <ToDoForm addTodo={addTodo} />\n    </div>\n  );\n};\n\nexport default ToDoWarpper;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CG,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClBE,OAAO,CAACC,GAAG,CAAC,OAAOH,KAAK,CAAC;EACzB,MAAMI,OAAO,GAAIC,IAAI,IAAK;IACxB,IAAIL,KAAK,KAAK,EAAE,EAAE;MAChBC,QAAQ,CAAC,CACP;QACEK,EAAE,EAAET,SAAS;QACbU,IAAI,EAAEF,IAAI,KAAK,EAAE,GAAG,WAAW,GAAGA,IAAI;QACtCG,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE;MACb,CAAC,CACF,CAAC;IACJ,CAAC,MAAM;MACLR,QAAQ,CAAC,CACP,GAAGD,KAAK,EACR;QACEM,EAAE,EAAET,SAAS;QACbU,IAAI,EAAEF,IAAI,KAAK,EAAE,GAAG,WAAW,GAAGA,IAAI;QACtCG,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE;MACb,CAAC,CACF,CAAC;IACJ;IAEAX,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BjB,OAAA,CAACF,QAAQ;MAACY,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACnB,EAAA,CApCID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}