{"ast":null,"code":"var _jsxFileName = \"/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoForm.js\",\n  _s = $RefreshSig$();\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState, ReactDOMServer } from \"react\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoForm = ({\n  addTodo,\n  deletedTodo\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault(); // prevent the page onload when form submit\n    addTodo(value, date);\n    setValue(\"\");\n    setDate(\"\");\n  };\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(currentDate.getDate()).padStart(2, \"0\");\n\n  // Create the date string in the format \"YYYY-MM-DD\"\n  const formattedDate = `${year}-${month}-${day}`;\n  const showDeleted = () => {\n    // Create an array of JSX elements to display todos\n    const todoElements = deletedTodo.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo-done\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: e.dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: e.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, e.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this));\n\n    // Create the content for the SweetAlert dialog\n    const todoHtml = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Deleted Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), todoElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n    swal.fire({\n      title: \"<strong>HTML <u>example</u></strong>\",\n      icon: \"info\",\n      html: todoHtml\n    });\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"TodoForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-input\",\n        placeholder: \"enter your task..\",\n        value: value //to make the input is empty\n        ,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: date,\n        type: \"date\",\n        min: formattedDate,\n        className: \"todo-input\",\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faTrash,\n        className: \"trash\",\n        onClick: showDeleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"todo-btn\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(ToDoForm, \"QFWCJVgKq3ZLveaq8ZTSbHu4Uro=\");\n_c = ToDoForm;\nexport default ToDoForm;\n\n/* e represents the event object. e.target refers \n      to the DOM element (the input field in this case) */\nvar _c;\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["faTrash","FontAwesomeIcon","React","useState","ReactDOMServer","swal","jsxDEV","_jsxDEV","ToDoForm","addTodo","deletedTodo","_s","value","setValue","date","setDate","handleSubmit","e","preventDefault","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","showDeleted","todoElements","map","className","children","dueDate","fileName","_jsxFileName","lineNumber","columnNumber","task","id","todoHtml","fire","title","icon","html","onSubmit","type","placeholder","onChange","target","min","onClick","_c","$RefreshReg$"],"sources":["/Users/mahmoudzeineddin/Desktop/React/Projects/to-do-list-react-app/src/components/ToDoForm.js"],"sourcesContent":["import { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState, ReactDOMServer } from \"react\";\nimport swal from \"sweetalert\";\n\nconst ToDoForm = ({ addTodo, deletedTodo }) => {\n  const [value, setValue] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault(); // prevent the page onload when form submit\n    addTodo(value, date);\n    setValue(\"\");\n    setDate(\"\");\n  };\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(currentDate.getDate()).padStart(2, \"0\");\n\n  // Create the date string in the format \"YYYY-MM-DD\"\n  const formattedDate = `${year}-${month}-${day}`;\n\n  const showDeleted = () => {\n    // Create an array of JSX elements to display todos\n    const todoElements = deletedTodo.map((e) => (\n      <div className=\"Todo-done\" key={e.id}>\n        <p>{e.dueDate}</p>\n        <p>{e.task}</p>\n      </div>\n    ));\n\n    // Create the content for the SweetAlert dialog\n    const todoHtml = (\n      <div>\n        <h2>Deleted Todos</h2>\n        {todoElements}\n      </div>\n    );\n\n    swal.fire({\n      title: \"<strong>HTML <u>example</u></strong>\",\n      icon: \"info\",\n      html: todoHtml,\n    });\n\n    return (\n      <form className=\"TodoForm\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"todo-input\"\n          placeholder=\"enter your task..\"\n          value={value} //to make the input is empty\n          onChange={(e) => setValue(e.target.value)}\n        />\n\n        <input\n          value={date}\n          type=\"date\"\n          min={formattedDate}\n          className=\"todo-input\"\n          onChange={(e) => setDate(e.target.value)}\n        />\n\n        <FontAwesomeIcon\n          icon={faTrash}\n          className=\"trash\"\n          onClick={showDeleted}\n        />\n\n        <button type=\"submit\" className=\"todo-btn\">\n          Add Task\n        </button>\n      </form>\n    );\n  };\n};\n\nexport default ToDoForm;\n\n/* e represents the event object. e.target refers \n      to the DOM element (the input field in this case) */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}